Hello
Git Vocabulary ------------------------------->

Git - the shell prompt and associated commands used to access repositories

GitHub - Free online storage and multi-user access to git repositories

Branch - a "sub-repository" that contains its own copy of code that is used to develop a specific part of the program (think of tree branches)
NOTE: Each group will have its own branch for isolated work, as we go we will merge those branches into the Dev branch to get a feel for the final 
product.    

commit - saving the current status of your files to the local git repository/branch

Pull Request - a request made by contributors (you) to merge one branch to another

Working Directory - Files that are different from your last commit (everything you are currently working on since the last commit)

Staging Index - Files that are currently being tracked for your next commit



USING GIT (shell commands) ------------------->

git config --global user.name "your name"
git config --global user.email email@example.com
- after you first install git, use this to set it up

NOTE: git is inherently a hidden file so you must activate hidden file view in your file explorer in order to see it
DO NOT PUT ANY FILES INTO THE GIT DIRECTORY, it must be in the same folder as your code

git clone RepositoryUrl.git
 - this will copy the specified repository into your current directory

git status
 - tells you what is currently in the staging index and what isn't
 - only shows files that are different than the previous commit (only deals with changes)

NOTE: you can see the staging index files with 'git status', green means those files have been added and are unchanged since doing so.
Red means they are either not in the staging index or are different from the last time you added it and needs to be updated again with 
'git add filename' or 'git add .'

git add filename
 - move a specific file to the staging index, you must include the path starting from the git file location
 - you can see the file paths with 'git status'

git add .
 - moves all files in the current working directory to the staging index, dont forget the period at the end

git commit -m 'short description of changes, no more than a sentence or two'
 - this will save all staging index files (the ones you added with 'git add') to the branch you are currently on

git checkout BranchName
 - this will allow you to change branches

git checkout -b BranchName
- creates new branch of that name

git push origin BranchName
 - this will push all new committs you have made to the specified branch on github (you need internet)
 - be sure to specify the intended branch, pushing to the wrong branch will cause issues

git pull origin BranchName
- copies the online github branch and loads it into your current local branch

git log
 - shows you all previous commits of the current branch

git log --oneline
 - shows you previous commits but only the commit SHA (commit name/signature) and its corresponding message, all on one line per commit

Remember: Git can be a little confusing at times but is very forgiving. If you have or notice any problems, be sure to let me
or your other group members know.



USING GITHUB ----------------------------->

when you want to merge your code to a main branch, you must make a pull request on the website

In that request, you describe what it is that you changed about the code
and why you made those changes (try to keep it as short and to the point as possible).
Make sure your branch is working properly before you send a pull request, DO NOT
pull request to the dev or master branch without me, stay within your group branch until
I say to merge with anything else

Once the pull request is approved, your code branch will be merged into the main branch

direct access to the dev and master branch will be limited to me alone






